
/* Copyright 2015-present Samsung Electronics Co., Ltd. and other contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file is generated by tools/js2c.py
 * Do not modify this.
 */
#ifndef IOTJS_JS_H
#define IOTJS_JS_H
extern const char assert_n[];
extern const char assert_s[];
extern const int assert_l;
extern const char buffer_n[];
extern const char buffer_s[];
extern const int buffer_l;
extern const char console_n[];
extern const char console_s[];
extern const int console_l;
extern const char constants_n[];
extern const char constants_s[];
extern const int constants_l;
extern const char dns_n[];
extern const char dns_s[];
extern const int dns_l;
extern const char events_n[];
extern const char events_s[];
extern const int events_l;
extern const char fs_n[];
extern const char fs_s[];
extern const int fs_l;
extern const char http_n[];
extern const char http_s[];
extern const int http_l;
extern const char http_client_n[];
extern const char http_client_s[];
extern const int http_client_l;
extern const char http_common_n[];
extern const char http_common_s[];
extern const int http_common_l;
extern const char http_incoming_n[];
extern const char http_incoming_s[];
extern const int http_incoming_l;
extern const char http_outgoing_n[];
extern const char http_outgoing_s[];
extern const int http_outgoing_l;
extern const char http_server_n[];
extern const char http_server_s[];
extern const int http_server_l;
extern const char iotjs_n[];
extern const char iotjs_s[];
extern const int iotjs_l;
extern const char module_n[];
extern const char module_s[];
extern const int module_l;
extern const char net_n[];
extern const char net_s[];
extern const int net_l;
extern const char stream_n[];
extern const char stream_s[];
extern const int stream_l;
extern const char stream_duplex_n[];
extern const char stream_duplex_s[];
extern const int stream_duplex_l;
extern const char stream_readable_n[];
extern const char stream_readable_s[];
extern const int stream_readable_l;
extern const char stream_writable_n[];
extern const char stream_writable_s[];
extern const int stream_writable_l;
extern const char testdriver_n[];
extern const char testdriver_s[];
extern const int testdriver_l;
extern const char timers_n[];
extern const char timers_s[];
extern const int timers_l;
extern const char util_n[];
extern const char util_s[];
extern const int util_l;

typedef struct {
  const char* name;
  const void* code;
  const int length;
} iotjs_js_module;

extern const iotjs_js_module natives[];

#endif
